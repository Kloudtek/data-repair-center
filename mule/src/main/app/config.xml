<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2017. Kloudtek Software Solutions Ltd
  -->

<mule xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	  xmlns:secure-property-placeholder="http://www.mulesoft.org/schema/mule/secure-property-placeholder"
	  xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:sqs="http://www.mulesoft.org/schema/mule/sqs"
	  xmlns:bti="http://www.mulesoft.org/schema/mule/ee/bti"
	  xmlns:context="http://www.springframework.org/schema/context"
	  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cors="http://www.mulesoft.org/schema/mule/cors"
	  xmlns:spring="http://www.springframework.org/schema/beans" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit"
	  xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/bti http://www.mulesoft.org/schema/mule/ee/bti/current/mule-bti-ee.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.mulesoft.org/schema/mule/cors http://www.mulesoft.org/schema/mule/cors/current/mule-cors.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
http://www.mulesoft.org/schema/mule/sqs http://www.mulesoft.org/schema/mule/sqs/current/mule-sqs.xsd
http://www.mulesoft.org/schema/mule/secure-property-placeholder http://www.mulesoft.org/schema/mule/secure-property-placeholder/current/mule-secure-property-placeholder.xsd">
	<!-- Import flows from drc library -->
	<spring:beans>
		<!-- Handles REST APIs through APIKit -->
		<spring:import resource="classpath:drc-rest.xml"/>
		<!-- Handles REST APIs exceptions through APIKit -->
		<spring:import resource="classpath:drc-rest-exceptions.xml"/>
		<!-- Shared DRC Logic -->
		<spring:import resource="classpath:drc-logic.xml"/>
		<!-- Used to send messages to JMS -->
		<spring:import resource="classpath:drc-jms-sender.xml"/>
		<!-- Used to received messages from JMS -->
		<spring:import resource="classpath:drc-jms-consumer.xml"/>
		<!-- Used to store data in a postgresql database -->
		<spring:import resource="classpath:drc-db-postgresql.xml"/>
		<!-- Used default data analysis -->
		<spring:import resource="classpath:drc-analysedata.xml"/>
	</spring:beans>
	<bti:transaction-manager/>
	<http:listener-config name="api-httpListenerConfig" host="${http.host}" port="${http.port}" doc:name="HTTP Listener Configuration"/>
	<context:property-placeholder location="config.properties,config-default.properties" ignore-resource-not-found="true"/>
    <jms:activemq-connector name="Active_MQ" specification="1.1" brokerURL="${mq.url}" validateConnections="true" doc:name="Active MQ" maxRedelivery="1" durable="true"
							persistentDelivery="true" />
	<apikit:config name="api-config" raml="drc.raml" consoleEnabled="false" doc:name="Router"/>
	<cors:config name="corsConfig" doc:name="Cors">
		<cors:origins>
			<cors:origin url="${http.cors.origin}" accessControlMaxAge="${http.cors.age}">
				<cors:methods>
					<cors:method>GET</cors:method>
					<cors:method>PUT</cors:method>
					<cors:method>POST</cors:method>
					<cors:method>DELETE</cors:method>
					<cors:method>OPTIONS</cors:method>
				</cors:methods>
				<cors:headers>
					<cors:header>content-type</cors:header>
				</cors:headers>
			</cors:origin>
		</cors:origins>
	</cors:config>
</mule>
