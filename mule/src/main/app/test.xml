<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright (c) 2016. Kloudtek Software Solutions Ltd
  -->

<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:jbossts="http://www.mulesoft.org/schema/mule/jbossts" xmlns:jms="http://www.mulesoft.org/schema/mule/jms" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:sqs="http://www.mulesoft.org/schema/mule/sqs"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/sqs http://www.mulesoft.org/schema/mule/sqs/current/mule-sqs.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/current/mule-jms.xsd
http://www.mulesoft.org/schema/mule/jbossts http://www.mulesoft.org/schema/mule/jbossts/current/mule-jbossts.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">
    <flow name="testFlow">
        <http:listener config-ref="api-httpListenerConfig" path="/test" doc:name="HTTP"/>
        <set-property propertyName="drcBusinessId" value="SomeBusinessId123" doc:name="Property drcBusinessId"/>
        <set-property propertyName="drcOriginId" value="devDQLTest" doc:name="Property drcOriginId"/>
        <set-property propertyName="drcMimeType" value="application/json" doc:name="Property drcOriginId"/>
        <object-to-byte-array-transformer doc:name="Object to Byte Array"/>
        <jms:outbound-endpoint queue="devDQLTest" connector-ref="Active_MQ" doc:name="JMS"/>
    </flow>

    <flow name="mq-test">
        <jms:inbound-endpoint queue="devDQLTest" connector-ref="Active_MQ" doc:name="JMS">
            <jms:transaction action="ALWAYS_BEGIN"/>
        </jms:inbound-endpoint>
        <byte-array-to-string-transformer doc:name="Byte Array to String"/>
        <logger message="SQS Received from test queue: #[payload]" doc:name="Logger" category="test" level="INFO"/>
        <set-payload value="#[payload]" mimeType="application/json" doc:name="Set Payload"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
        </dw:transform-message>

        <choice doc:name="Choice">
            <when expression="#[payload.valid == 'true']">
                <logger message="payload is valid: #[payload]" level="INFO" doc:name="Logger"/>
            </when>
            <otherwise>
                <logger message="payload is not valid: #[payload]" level="INFO" doc:name="Logger"/>
                <scripting:component doc:name="Script">
                    <scripting:script engine="Groovy"><![CDATA[throw new IllegalArgumentException('Invalid payload')]]></scripting:script>
                </scripting:component>
            </otherwise>
        </choice>
        <default-exception-strategy>
            <rollback-transaction exception-pattern="*"/>
        </default-exception-strategy>
    </flow>
</mule>
